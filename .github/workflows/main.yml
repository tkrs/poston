name: CI

on: [push]

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.54.0
          - stable
          - nightly
    name: Test and Build - ${{ matrix.version }}
    runs-on: ubuntu-latest
    services:
      fluentd:
        image: fluentd
        ports:
          - 24224:24224
    steps:
      - uses: actions/checkout@master
      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          components: rustfmt
          override: true
      - name: Install sccache
        env:
          SCCACHE_LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: 0.2.13
        run: |
          curl -L "$SCCACHE_LINK/$SCCACHE_VERSION/sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl.tar.gz" | tar xz
          echo "$PWD/sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl/" >> $GITHUB_PATH
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
      - name: Cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --color=always --check
      - name: Cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --tests --workspace --verbose
      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --no-fail-fast -- --nocapture
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --verbose
      - name: Run cargo-tarpaulin
        if: matrix.version == 'stable'
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: --ignore-tests
      - name: Upload to Codecov
        if: matrix.version == 'stable'
        uses: codecov/codecov-action@v3.0.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Archive code coverage results
        if: matrix.version == 'stable'
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: cobertura.xml
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install toolchain and components
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-x86_64-unknown-linux-gnu
          components: clippy
          override: true
      - name: Cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --verbose
